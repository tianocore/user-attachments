diff --git a/StdLib/EfiSocketLib/Ip4.c b/StdLib/EfiSocketLib/Ip4.c
index d3531b8928..4b6ea09ed4 100644
--- a/StdLib/EfiSocketLib/Ip4.c
+++ b/StdLib/EfiSocketLib/Ip4.c
@@ -594,17 +594,18 @@ EslIp4RemoteAddressSet (
   @param [in] pIo       The address of an ::ESL_IO_MGMT structure
 
 **/
-VOID
+EFIAPI VOID
 EslIp4RxComplete (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *context
   )
 {
   size_t LengthInBytes;
   ESL_PACKET * pPacket;
   EFI_IP4_RECEIVE_DATA * pRxData;
   EFI_STATUS Status;
-
+  ESL_IO_MGMT * pIo = (ESL_IO_MGMT *)context;
+  
   DBG_ENTER ( );
 
   //
@@ -1123,10 +1124,10 @@ EslIp4TxBuffer (
   @param [in] pIo       The address of an ::ESL_IO_MGMT structure
 
 **/
-VOID
+EFIAPI VOID
 EslIp4TxComplete (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *context
   )
 {
   UINT32 LengthInBytes;
@@ -1134,6 +1135,7 @@ EslIp4TxComplete (
   ESL_PACKET * pPacket;
   ESL_SOCKET * pSocket;
   EFI_STATUS Status;
+  ESL_IO_MGMT * pIo = (ESL_IO_MGMT*)context;
 
   DBG_ENTER ( );
 
@@ -1347,6 +1349,7 @@ CONST ESL_PROTOCOL_API cEslIp4Api = {
   OFFSET_OF ( ESL_PORT, Context.Ip4.ModeData.ConfigData ),
   OFFSET_OF ( ESL_LAYER, pIp4List ),
   OFFSET_OF ( struct sockaddr_in, sin_zero ),
+
   sizeof ( struct sockaddr_in ),
   AF_INET,
   sizeof (((ESL_PACKET *)0 )->Op.Ip4Rx ),
diff --git a/StdLib/EfiSocketLib/Socket.c b/StdLib/EfiSocketLib/Socket.c
index d782b435e6..a48e2a1343 100644
--- a/StdLib/EfiSocketLib/Socket.c
+++ b/StdLib/EfiSocketLib/Socket.c
@@ -3976,14 +3976,15 @@ EslSocketPortClose (
   @param[in]  Event     The close completion event
   @param[in]  pPort     Address of an ::ESL_PORT structure.
 **/
-VOID
+EFIAPI VOID
 EslSocketPortCloseComplete (
   IN EFI_EVENT Event,
-  IN ESL_PORT * pPort
+  IN VOID *context
   )
 {
   ESL_IO_MGMT * pIo;
   EFI_STATUS Status;
+  ESL_PORT * pPort = (ESL_PORT*) context;
 
   DBG_ENTER ( );
   VERIFY_AT_TPL ( TPL_SOCKETS );
diff --git a/StdLib/EfiSocketLib/Socket.h b/StdLib/EfiSocketLib/Socket.h
index 583be1ffd0..950f523b8f 100644
--- a/StdLib/EfiSocketLib/Socket.h
+++ b/StdLib/EfiSocketLib/Socket.h
@@ -597,9 +597,9 @@ EFI_STATUS
 **/
 typedef
 VOID
-(* PFN_API_IO_COMPLETE) (
+(EFIAPI * PFN_API_IO_COMPLETE) (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *pIo //IN ESL_IO_MGMT * pIo
   );
 
 /**
@@ -915,9 +915,9 @@ EFI_STATUS
 **/
 typedef
 VOID
-(* PFN_API_TX_COMPLETE) (
+(EFIAPI * PFN_API_TX_COMPLETE) (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *pIo //IN ESL_IO_MGMT * pIo
   );
 
 /**
@@ -1439,10 +1439,10 @@ EslSocketPortClose (
   @param [in] pPort     Address of an ::ESL_PORT structure.
 
 **/
-VOID
+EFIAPI VOID
 EslSocketPortCloseComplete (
   IN EFI_EVENT Event,
-  IN ESL_PORT * pPort
+  IN VOID *context
   );
 
 /**
diff --git a/StdLib/EfiSocketLib/Tcp4.c b/StdLib/EfiSocketLib/Tcp4.c
index 68477fba6e..ea120a4d47 100644
--- a/StdLib/EfiSocketLib/Tcp4.c
+++ b/StdLib/EfiSocketLib/Tcp4.c
@@ -74,10 +74,10 @@ EslTcp4ConnectStart (
   @param [in] pPort     Address of an ::ESL_PORT structure.
 
 **/
-VOID
+EFIAPI VOID
 EslTcp4ListenComplete (
   IN EFI_EVENT Event,
-  IN ESL_PORT * pPort
+  IN VOID *contet
   );
 
 
@@ -191,10 +191,10 @@ EslTcp4Accept (
   @param [in] pPort     Address of an ::ESL_PORT structure.
 
 **/
-VOID
+EFIAPI VOID
 EslTcp4ConnectComplete (
   IN EFI_EVENT Event,
-  IN ESL_PORT * pPort
+  IN VOID *context
   )
 {
   BOOLEAN bRemoveFirstPort;
@@ -203,7 +203,8 @@ EslTcp4ConnectComplete (
   ESL_SOCKET * pSocket;
   ESL_TCP4_CONTEXT * pTcp4;
   EFI_STATUS Status;
-
+  ESL_PORT * pPort = (ESL_PORT*)context;
+  
   DBG_ENTER ( );
 
   //
@@ -659,7 +660,7 @@ EslTcp4Listen (
         pTcp4 = &pPort->Context.Tcp4;
         Status = gBS->CreateEvent ( EVT_NOTIFY_SIGNAL,
                                     TPL_SOCKETS,
-                                    (EFI_EVENT_NOTIFY)EslTcp4ListenComplete,
+                                    EslTcp4ListenComplete,
                                     pPort,
                                     &pTcp4->ListenToken.CompletionToken.Event );
         if ( EFI_ERROR ( Status )) {
@@ -831,10 +832,10 @@ EslTcp4Listen (
   @param [in] pPort     Address of an ::ESL_PORT structure.
 
 **/
-VOID
+EFIAPI VOID
 EslTcp4ListenComplete (
   IN EFI_EVENT Event,
-  IN ESL_PORT * pPort
+  IN VOID *context
   )
 {
   EFI_HANDLE ChildHandle;
@@ -848,6 +849,7 @@ EslTcp4ListenComplete (
   EFI_STATUS Status;
   EFI_HANDLE TcpPortHandle;
   EFI_STATUS TempStatus;
+  ESL_PORT * pPort = (ESL_PORT*)context;
 
   DBG_ENTER ( );
   VERIFY_AT_TPL ( TPL_SOCKETS );
@@ -1269,7 +1271,7 @@ EslTcp4PortAllocate (
     pTcp4 = &pPort->Context.Tcp4;
     Status = gBS->CreateEvent (  EVT_NOTIFY_SIGNAL,
                                  TPL_SOCKETS,
-                                 (EFI_EVENT_NOTIFY)EslSocketPortCloseComplete,
+                                 EslSocketPortCloseComplete,
                                  pPort,
                                  &pTcp4->CloseToken.CompletionToken.Event);
     if ( EFI_ERROR ( Status )) {
@@ -1288,7 +1290,7 @@ EslTcp4PortAllocate (
     //
     Status = gBS->CreateEvent (  EVT_NOTIFY_SIGNAL,
                                  TPL_SOCKETS,
-                                 (EFI_EVENT_NOTIFY)EslTcp4ConnectComplete,
+                                 EslTcp4ConnectComplete,
                                  pPort,
                                  &pTcp4->ConnectToken.CompletionToken.Event);
     if ( EFI_ERROR ( Status )) {
@@ -1738,16 +1740,17 @@ EslTcp4RemoteAddressSet (
   @param [in] pIo       Address of an ::ESL_IO_MGMT structure
 
 **/
-VOID
+EFIAPI VOID
 EslTcp4RxComplete (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *context
   )
 {
   BOOLEAN bUrgent;
   size_t LengthInBytes;
   ESL_PACKET * pPacket;
   EFI_STATUS Status;
+  ESL_IO_MGMT * pIo = (ESL_IO_MGMT*)context;
 
   DBG_ENTER ( );
 
@@ -2127,10 +2130,10 @@ EslTcp4TxBuffer (
   @param [in] pIo       The ESL_IO_MGMT structure address
 
 **/
-VOID
+EFIAPI VOID
 EslTcp4TxComplete (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *context
   )
 {
   UINT32 LengthInBytes;
@@ -2138,6 +2141,7 @@ EslTcp4TxComplete (
   ESL_PORT * pPort;
   ESL_SOCKET * pSocket;
   EFI_STATUS Status;
+  ESL_IO_MGMT * pIo = (ESL_IO_MGMT*)context;
 
   DBG_ENTER ( );
 
@@ -2184,10 +2188,10 @@ EslTcp4TxComplete (
   @param [in] pIo       The ESL_IO_MGMT structure address
 
 **/
-VOID
+EFIAPI VOID
 EslTcp4TxOobComplete (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *context
   )
 {
   UINT32 LengthInBytes;
@@ -2195,6 +2199,7 @@ EslTcp4TxOobComplete (
   ESL_PORT * pPort;
   ESL_SOCKET * pSocket;
   EFI_STATUS Status;
+  ESL_IO_MGMT * pIo = (ESL_IO_MGMT*)context;
 
   DBG_ENTER ( );
 
diff --git a/StdLib/EfiSocketLib/Tcp6.c b/StdLib/EfiSocketLib/Tcp6.c
index 0f6d2d6ac9..754b7bda6c 100644
--- a/StdLib/EfiSocketLib/Tcp6.c
+++ b/StdLib/EfiSocketLib/Tcp6.c
@@ -74,10 +74,10 @@ EslTcp6ConnectStart (
   @param [in] pPort     Address of an ::ESL_PORT structure.
 
 **/
-VOID
+EFIAPI VOID
 EslTcp6ListenComplete (
   IN EFI_EVENT Event,
-  IN ESL_PORT * pPort
+  IN VOID *pPort // IN ESL_PORT * pPort
   );
 
 
@@ -185,10 +185,10 @@ EslTcp6Accept (
   @param [in] pPort     Address of an ::ESL_PORT structure.
 
 **/
-VOID
+EFIAPI VOID
 EslTcp6ConnectComplete (
   IN EFI_EVENT Event,
-  IN ESL_PORT * pPort
+  IN VOID *context
   )
 {
   BOOLEAN bRemoveFirstPort;
@@ -197,6 +197,7 @@ EslTcp6ConnectComplete (
   ESL_SOCKET * pSocket;
   ESL_TCP6_CONTEXT * pTcp6;
   EFI_STATUS Status;
+  ESL_PORT * pPort = (ESL_PORT*)context;
 
   DBG_ENTER ( );
 
@@ -690,7 +691,7 @@ EslTcp6Listen (
         pTcp6 = &pPort->Context.Tcp6;
         Status = gBS->CreateEvent ( EVT_NOTIFY_SIGNAL,
                                     TPL_SOCKETS,
-                                    (EFI_EVENT_NOTIFY)EslTcp6ListenComplete,
+                                    EslTcp6ListenComplete,
                                     pPort,
                                     &pTcp6->ListenToken.CompletionToken.Event );
         if ( EFI_ERROR ( Status )) {
@@ -862,10 +863,10 @@ EslTcp6Listen (
   @param [in] pPort     Address of an ::ESL_PORT structure.
 
 **/
-VOID
+EFIAPI VOID
 EslTcp6ListenComplete (
   IN EFI_EVENT Event,
-  IN ESL_PORT * pPort
+  IN VOID *context
   )
 {
   EFI_HANDLE ChildHandle;
@@ -879,7 +880,8 @@ EslTcp6ListenComplete (
   EFI_STATUS Status;
   EFI_HANDLE TcpPortHandle;
   EFI_STATUS TempStatus;
-
+  ESL_PORT * pPort = (ESL_PORT*)context;
+  
   DBG_ENTER ( );
   VERIFY_AT_TPL ( TPL_SOCKETS );
 
@@ -1320,7 +1322,7 @@ EslTcp6PortAllocate (
     pTcp6 = &pPort->Context.Tcp6;
     Status = gBS->CreateEvent (  EVT_NOTIFY_SIGNAL,
                                  TPL_SOCKETS,
-                                 (EFI_EVENT_NOTIFY)EslSocketPortCloseComplete,
+                                 EslSocketPortCloseComplete,
                                  pPort,
                                  &pTcp6->CloseToken.CompletionToken.Event);
     if ( EFI_ERROR ( Status )) {
@@ -1339,7 +1341,7 @@ EslTcp6PortAllocate (
     //
     Status = gBS->CreateEvent (  EVT_NOTIFY_SIGNAL,
                                  TPL_SOCKETS,
-                                 (EFI_EVENT_NOTIFY)EslTcp6ConnectComplete,
+                                 EslTcp6ConnectComplete,
                                  pPort,
                                  &pTcp6->ConnectToken.CompletionToken.Event);
     if ( EFI_ERROR ( Status )) {
@@ -1807,16 +1809,17 @@ EslTcp6RemoteAddressSet (
   @param [in] pIo       Address of an ::ESL_IO_MGMT structure
 
 **/
-VOID
+EFIAPI VOID
 EslTcp6RxComplete (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *context
   )
 {
   BOOLEAN bUrgent;
   size_t LengthInBytes;
   ESL_PACKET * pPacket;
   EFI_STATUS Status;
+  ESL_IO_MGMT * pIo = (ESL_IO_MGMT*)context;
 
   DBG_ENTER ( );
 
@@ -2196,10 +2199,10 @@ EslTcp6TxBuffer (
   @param [in] pIo       The ESL_IO_MGMT structure address
 
 **/
-VOID
+EFIAPI VOID
 EslTcp6TxComplete (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *context
   )
 {
   UINT32 LengthInBytes;
@@ -2207,7 +2210,8 @@ EslTcp6TxComplete (
   ESL_PORT * pPort;
   ESL_SOCKET * pSocket;
   EFI_STATUS Status;
-
+  ESL_IO_MGMT * pIo = (ESL_IO_MGMT*)context;
+     
   DBG_ENTER ( );
 
   //
@@ -2253,10 +2257,10 @@ EslTcp6TxComplete (
   @param [in] pIo       The ESL_IO_MGMT structure address
 
 **/
-VOID
+EFIAPI VOID
 EslTcp6TxOobComplete (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *context
   )
 {
   UINT32 LengthInBytes;
@@ -2264,7 +2268,8 @@ EslTcp6TxOobComplete (
   ESL_PORT * pPort;
   ESL_SOCKET * pSocket;
   EFI_STATUS Status;
-
+  ESL_IO_MGMT * pIo = (ESL_IO_MGMT*)context;
+  
   DBG_ENTER ( );
 
   //
diff --git a/StdLib/EfiSocketLib/Udp4.c b/StdLib/EfiSocketLib/Udp4.c
index ef2f9e321b..e8268845d4 100644
--- a/StdLib/EfiSocketLib/Udp4.c
+++ b/StdLib/EfiSocketLib/Udp4.c
@@ -490,16 +490,17 @@ EslUdp4RemoteAddressSet (
   @param [in] pIo       Address of an ::ESL_IO_MGMT structure
 
 **/
-VOID
+EFIAPI VOID
 EslUdp4RxComplete (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *context
   )
 {
   size_t LengthInBytes;
   ESL_PACKET * pPacket;
   EFI_UDP4_RECEIVE_DATA * pRxData;
   EFI_STATUS Status;
+  ESL_IO_MGMT * pIo = (ESL_IO_MGMT*)context;
   
   DBG_ENTER ( );
 
@@ -975,10 +976,10 @@ EslUdp4TxBuffer (
   @param [in] pIo       Address of an ::ESL_IO_MGMT structure
 
 **/
-VOID
+EFIAPI VOID
 EslUdp4TxComplete (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *context
   )
 {
   UINT32 LengthInBytes;
@@ -986,6 +987,7 @@ EslUdp4TxComplete (
   ESL_PACKET * pPacket;
   ESL_SOCKET * pSocket;
   EFI_STATUS Status;
+  ESL_IO_MGMT * pIo = (ESL_IO_MGMT*)context;
   
   DBG_ENTER ( );
   
diff --git a/StdLib/EfiSocketLib/Udp6.c b/StdLib/EfiSocketLib/Udp6.c
index 34df064941..d6566743aa 100644
--- a/StdLib/EfiSocketLib/Udp6.c
+++ b/StdLib/EfiSocketLib/Udp6.c
@@ -484,16 +484,17 @@ EslUdp6RemoteAddressSet (
   @param [in] pIo       Address of an ::ESL_IO_MGMT structure
 
 **/
-VOID
+EFIAPI VOID
 EslUdp6RxComplete (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *context
   )
 {
   size_t LengthInBytes;
   ESL_PACKET * pPacket;
   EFI_UDP6_RECEIVE_DATA * pRxData;
   EFI_STATUS Status;
+  ESL_IO_MGMT * pIo = (ESL_IO_MGMT*)context;
   
   DBG_ENTER ( );
 
@@ -1027,10 +1028,10 @@ EslUdp6TxBuffer (
   @param [in] pIo       Address of an ::ESL_IO_MGMT structure
 
 **/
-VOID
+EFIAPI VOID
 EslUdp6TxComplete (
   IN EFI_EVENT Event,
-  IN ESL_IO_MGMT * pIo
+  IN VOID *context
   )
 {
   UINT32 LengthInBytes;
@@ -1038,6 +1039,7 @@ EslUdp6TxComplete (
   ESL_PACKET * pPacket;
   ESL_SOCKET * pSocket;
   EFI_STATUS Status;
+  ESL_IO_MGMT * pIo = (ESL_IO_MGMT*)context;
   
   DBG_ENTER ( );
   
