#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   Makefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = MsftAvilaPkg
PLATFORM_GUID = 4914D66E-9EDD-4835-9E1D-5B953F7C526D
PLATFORM_VERSION = 0.1
PLATFORM_RELATIVE_DIR = MsftAvilaPkg
PLATFORM_DIR = c:\_uefi\devicesintel\SURF_ICL\MsftAvilaPkg
PLATFORM_OUTPUT_DIR = Build\MsftAvilaPkg

#
# Module Macro Definition
#
MODULE_NAME = DemoWrapperDriver
MODULE_GUID = 9E355B17-CC80-4763-B408-3466C5752139
MODULE_NAME_GUID = DemoWrapperDriver
MODULE_VERSION = 1.0
MODULE_TYPE = DXE_DRIVER
MODULE_FILE = DemoWrapperDriver.inf
MODULE_FILE_BASE_NAME = DemoWrapperDriver
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = MsSurfaceIntelPkg\DemoWrapperDriver
PACKAGE_RELATIVE_DIR = DemoWrapperDriver
MODULE_DIR = c:\_uefi\devicesintel\MsSurfaceIntelPkg\DemoWrapperDriver
FFS_OUTPUT_DIR = c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\FV\Ffs\9E355B17-CC80-4763-B408-3466C5752139DemoWrapperDriver

MODULE_ENTRY_POINT = UefiMain
ARCH_ENTRY_POINT = UefiMain
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 0x00010017
BASE_NAME = DemoWrapperDriver
FILE_GUID = 9E355B17-CC80-4763-B408-3466C5752139
VERSION_STRING = 1.0
MODULE_TYPE = DXE_DRIVER

#
# Build Configuration Macro Definition
#
ARCH = X64
TOOLCHAIN = VS2017
TOOLCHAIN_TAG = VS2017
TARGET = DEBUG

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017
BUILD_DIR = c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017
BIN_DIR = $(BUILD_DIR)\X64
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver
OUTPUT_DIR = c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\OUTPUT
DEBUG_DIR = c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
CP = copy /y
MV = move /y
RM = del /f /q
MD = mkdir
RD = rmdir /s /q


#
# Tools definitions specific to this module
#
ASMLINK = link16.exe # MU_CHANGE - change to prefix
ASMLINK_FLAGS = /nologo /tiny


OPTROM = EfiRom
OPTROM_FLAGS = -e


DTC_FLAGS = -H epapr
DTC = dtc

APP = C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx86\x64\cl.exe
APP_FLAGS = /nologo /E /TC /D DEBUG_TARGET /D EFI_DEBUG /D DEBUG_MODE=1 /DWA_1154714 /DWA_1172917 /DWA_1216141 /DWA_1290664 /DWA_1299407 /DWA_1310765 /DWA_1368387 /DWA_246363 /DWA_277402 /DWA_277900 /DWA_822790 /D MS_CHANGE_ACTIVE=1 /D UCODE_FLAG=1 /D TBT_DISABLED=1 $(OPTIMIZE_DISABLE_OPTIONS) $(MSFT_STATIC_ANALYSIS)

OBJCOPY_ADDDEBUGFLAG =  --add-gnu-debuglink=$(DEBUG_DIR)/$(MODULE_NAME).debug
OBJCOPY = echo
OBJCOPY_FLAGS = objcopy not needed for


ASL = iasl.exe
ASL_FLAGS = 
ASL_OUTFLAGS =  -p

GENFW = GenFw
GENFW_FLAGS = --keepexceptiontable

ASLDLINK = C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx86\x64\link.exe
ASLDLINK_FLAGS = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE

BROTLI = BrotliCompress
BROTLI_GUID =  3D532050-5CDA-4FD0-879E-0F7F630D5AFB


LZMAF86 = LzmaF86Compress
LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889

CRC32 = GenCrc32
CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083

ASM_FLAGS = /nologo /c /WX /W3 /Cx /Zd /Zi
ASM = C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx86\x64\ml64.exe

RUSTC_FLAGS = --edition=2018 --target x86_64-unknown-uefi -C debuginfo=2 -C panic=abort --crate-type staticlib --sysroot C:\_uefi\DevicesIntel\MU_BASECORE\RustPkg\External\r-efi/target/sysroot --extern r_efi=C:\_uefi\DevicesIntel\MU_BASECORE\RustPkg\External\r-efi/target/x86_64-unknown-uefi/release/libr_efi.rlib
RUSTC = rustc

SLINK = C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx86\x64\lib.exe
SLINK_FLAGS = /NOLOGO /LTCG


RSA2048SHA256SIGN = Rsa2048Sha256Sign
RSA2048SHA256SIGN_GUID =  A7717414-C616-4977-9420-844712A735BF


RC = C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x86\rc.exe

CARGO_FLAGS = --target x86_64-unknown-uefi --release
CARGO = cargo

SYMRENAME = echo
SYMRENAME_FLAGS = Symbol renaming not needed for

DTCPP = cpp

NASM_FLAGS = -Ox -f win64 -g
NASM = nasm

DEPS_FLAGS = /showIncludes

PKCS7SIGN = Pkcs7Sign
PKCS7SIGN_GUID =  4AAFD29D-68DF-49EE-8AA9-347D375665A7


ASM16 = C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx86\x86\ml.exe

ASLPP = C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx86\x64\cl.exe
ASLPP_FLAGS = /nologo /E /C /FIAutoGen.h /D DEBUG_TARGET /D EFI_DEBUG /D DEBUG_MODE=1 /DWA_1154714 /DWA_1172917 /DWA_1216141 /DWA_1290664 /DWA_1299407 /DWA_1310765 /DWA_1368387 /DWA_246363 /DWA_277402 /DWA_277900 /DWA_822790 /D MS_CHANGE_ACTIVE=1 /D UCODE_FLAG=1 /D TBT_DISABLED=1 $(MSFT_STATIC_ANALYSIS)

CARGOXBUILD_NAME =  xbuild


ASLCC = C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx86\x64\cl.exe
ASLCC_FLAGS = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable /D DEBUG_TARGET /D EFI_DEBUG /D DEBUG_MODE=1 /DWA_1154714 /DWA_1172917 /DWA_1216141 /DWA_1290664 /DWA_1299407 /DWA_1310765 /DWA_1368387 /DWA_246363 /DWA_277402 /DWA_277900 /DWA_822790 /D MS_CHANGE_ACTIVE=1 /D UCODE_FLAG=1 /D TBT_DISABLED=1 $(MSFT_STATIC_ANALYSIS)

CC_FLAGS = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Z7 /Gw /D DEBUG_TARGET /D EFI_DEBUG /D DEBUG_MODE=1 /DWA_1154714 /DWA_1172917 /DWA_1216141 /DWA_1290664 /DWA_1299407 /DWA_1310765 /DWA_1368387 /DWA_246363 /DWA_277402 /DWA_277900 /DWA_822790 /D MS_CHANGE_ACTIVE=1 /D UCODE_FLAG=1 /D TBT_DISABLED=1 $(OPTIMIZE_DISABLE_OPTIONS) $(MSFT_STATIC_ANALYSIS)
CC = C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx86\x64\cl.exe



VFRPP = C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx86\x64\cl.exe
VFRPP_FLAGS = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h /D DEBUG_TARGET /D EFI_DEBUG /D DEBUG_MODE=1 /DWA_1154714 /DWA_1172917 /DWA_1216141 /DWA_1290664 /DWA_1299407 /DWA_1310765 /DWA_1368387 /DWA_246363 /DWA_277402 /DWA_277900 /DWA_822790 /D MS_CHANGE_ACTIVE=1 /D UCODE_FLAG=1 /D TBT_DISABLED=1 $(OPTIMIZE_DISABLE_OPTIONS) $(MSFT_STATIC_ANALYSIS)

PP = C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx86\x64\cl.exe
PP_FLAGS = /nologo /E /TC /FIAutoGen.h

TIANO = TianoCompress
TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779

VFR = VfrCompile
VFR_FLAGS = -l -n




MAKE = C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx86\x86\nmake.exe



DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4281 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG /PDB:$(MODULE_NAME).pdb /PDBALTPATH:$(MODULE_NAME).pdb
DLINK = C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx86\x64\link.exe

LZMA = LzmaCompress
LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF

NASMB_FLAGS = -f bin

VPDTOOL = BPDG
VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08


MAKE_FILE = $(MODULE_BUILD_DIR)\Makefile

#
# Build Macro
#
OBJECT_FILES =  \
    $(OUTPUT_DIR)\AutoGen.obj \
    $(OUTPUT_DIR)\DemoWrapperDriver.obj

STATIC_LIBRARY_FILES =  \
    $(BIN_DIR)\AdvLoggerPkg\Library\AdvancedLoggerLib\Dxe\AdvancedLoggerLib\OUTPUT\DxeAdvancedLoggerLib.lib \
    $(BIN_DIR)\AdvLoggerPkg\Library\BaseDebugLibAdvancedLogger\BaseDebugLibAdvancedLogger\OUTPUT\BaseDebugLibAdvancedLogger.lib \
    $(BIN_DIR)\MdeModulePkg\Library\MuVariablePolicyHelperLib\MuVariablePolicyHelperLib\OUTPUT\MuVariablePolicyHelperLib.lib \
    $(BIN_DIR)\MdePkg\Library\BaseBinSecurityLibRng\BaseBinSecurityLibRng\OUTPUT\BaseBinSecurityLibRng.lib \
    $(BIN_DIR)\MdePkg\Library\BaseDebugPrintErrorLevelLib\BaseDebugPrintErrorLevelLib\OUTPUT\BaseDebugPrintErrorLevelLib.lib \
    $(BIN_DIR)\MdePkg\Library\BaseLib\BaseLib\OUTPUT\BaseLib.lib \
    $(BIN_DIR)\MdePkg\Library\BaseMemoryLibOptDxe\BaseMemoryLibOptDxe\OUTPUT\BaseMemoryLibOptDxe.lib \
    $(BIN_DIR)\MdePkg\Library\BasePrintLib\BasePrintLib\OUTPUT\BasePrintLib.lib \
    $(BIN_DIR)\MdePkg\Library\BaseRngLib\BaseRngLib\OUTPUT\BaseRngLib.lib \
    $(BIN_DIR)\MdePkg\Library\DxeHobLib\DxeHobLib\OUTPUT\DxeHobLib.lib \
    $(BIN_DIR)\MdePkg\Library\DxePcdLib\DxePcdLib\OUTPUT\DxePcdLib.lib \
    $(BIN_DIR)\MdePkg\Library\DxeServicesLib\DxeServicesLib\OUTPUT\DxeServicesLib.lib \
    $(BIN_DIR)\MdePkg\Library\UefiBootServicesTableLib\UefiBootServicesTableLib\OUTPUT\UefiBootServicesTableLib.lib \
    $(BIN_DIR)\MdePkg\Library\UefiDevicePathLib\UefiDevicePathLib\OUTPUT\UefiDevicePathLib.lib \
    $(BIN_DIR)\MdePkg\Library\UefiDriverEntryPoint\UefiDriverEntryPoint\OUTPUT\UefiDriverEntryPoint.lib \
    $(BIN_DIR)\MdePkg\Library\UefiLib\UefiLib\OUTPUT\UefiLib.lib \
    $(BIN_DIR)\MdePkg\Library\UefiMemoryAllocationLib\UefiMemoryAllocationLib\OUTPUT\UefiMemoryAllocationLib.lib \
    $(BIN_DIR)\MdePkg\Library\UefiRuntimeServicesTableLib\UefiRuntimeServicesTableLib\OUTPUT\UefiRuntimeServicesTableLib.lib \
    $(BIN_DIR)\MsSurfaceCorePkg\Library\MsManufacturingModeDxeLib\MsManufacturingModeDxeLib\OUTPUT\MsManufacturingModeDxeLib.lib \
    $(OUTPUT_DIR)\DemoWrapperDriver.lib

INC =  \
    /I$(WORKSPACE)\MsSurfaceIntelPkg\DemoWrapperDriver\X64\Bin \
    /I$(WORKSPACE)\MsSurfaceIntelPkg\DemoWrapperDriver \
    /I$(DEBUG_DIR) \
    /I$(WORKSPACE)\MsSurfaceIntelPkg \
    /I$(WORKSPACE)\MsSurfaceIntelPkg\Include \
    /I$(WORKSPACE)\Common\SURFACE\MsSurfaceCorePkg \
    /I$(WORKSPACE)\Common\SURFACE\MsSurfaceCorePkg\Include \
    /I$(WORKSPACE)\MU_BASECORE\MdePkg \
    /I$(WORKSPACE)\MU_BASECORE\MdePkg\Include \
    /I$(WORKSPACE)\MU_BASECORE\MdePkg\Include\X64 \
    /I$(WORKSPACE)\MU_BASECORE\MdeModulePkg \
    /I$(WORKSPACE)\MU_BASECORE\MdeModulePkg\Include \
    /I$(WORKSPACE)\Common\MU\MsCorePkg \
    /I$(WORKSPACE)\Common\MU\MsCorePkg\Include

OBJECT_FILES_LIST = c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\OUTPUT\object_files.lst
STATIC_LIBRARY_FILES_LIST = c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\OUTPUT\static_library_files.lst
OBJLIST_0 = $(OUTPUT_DIR)\AutoGen.obj $(OUTPUT_DIR)\DemoWrapperDriver.obj


#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\OUTPUT\DemoWrapperDriver.efi \
              c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\OUTPUT\PayloadDxe.efi \
              $(FFS_OUTPUT_DIR)\$(MODULE_GUID).map \
              $(FFS_OUTPUT_DIR)\$(MODULE_GUID).ffs \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)\$(MODULE_FILE) [$(ARCH)]

dirs:
	-@if not exist $(DEBUG_DIR) $(MD) $(DEBUG_DIR)
	-@if not exist $(OUTPUT_DIR) $(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)\AutoGen.h $(DEBUG_DIR)\$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseDebugPrintErrorLevelLib\BaseDebugPrintErrorLevelLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\AdvLoggerPkg\Library\AdvancedLoggerLib\Dxe\AdvancedLoggerLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePrintLib\BasePrintLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\DxePcdLib\DxePcdLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseLib\BaseLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseMemoryLibOptDxe\BaseMemoryLibOptDxe\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\AdvLoggerPkg\Library\BaseDebugLibAdvancedLogger\BaseDebugLibAdvancedLogger\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiBootServicesTableLib\UefiBootServicesTableLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiMemoryAllocationLib\UefiMemoryAllocationLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiRuntimeServicesTableLib\UefiRuntimeServicesTableLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiDevicePathLib\UefiDevicePathLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiLib\UefiLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\DxeHobLib\DxeHobLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseRngLib\BaseRngLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\DxeServicesLib\DxeServicesLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiDriverEntryPoint\UefiDriverEntryPoint\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MsSurfaceCorePkg\Library\MsManufacturingModeDxeLib\MsManufacturingModeDxeLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdeModulePkg\Library\MuVariablePolicyHelperLib\MuVariablePolicyHelperLib\Makefile
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseBinSecurityLibRng\BaseBinSecurityLibRng\Makefile
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)\Makefile fds
	@cd $(MODULE_BUILD_DIR)

!INCLUDE $(MODULE_BUILD_DIR)\dependency
!INCLUDE $(MODULE_BUILD_DIR)\deps_target

#
# Individual Object Build Targets
#
$(OBJLIST_0):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver.c \
	$(DEBUG_DIR)\AutoGen.h \
	$(DEBUG_DIR)\AutoGen.c
	"$(CC)" /Foc:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\OUTPUT\.\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) c:\_uefi\devicesintel\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver.c c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\DEBUG\AutoGen.c

$(OUTPUT_DIR)\DemoWrapperDriver.lib : $(OBJECT_FILES)
$(OUTPUT_DIR)\DemoWrapperDriver.lib : $(OBJECT_FILES_LIST)
	"$(SLINK)" $(SLINK_FLAGS) /OUT:c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\OUTPUT\DemoWrapperDriver.lib @$(OBJECT_FILES_LIST)

$(DEBUG_DIR)\DemoWrapperDriver.dll : $(MAKE_FILE)
$(DEBUG_DIR)\DemoWrapperDriver.dll : $(STATIC_LIBRARY_FILES)
$(DEBUG_DIR)\DemoWrapperDriver.dll : $(STATIC_LIBRARY_FILES_LIST)
	"$(DLINK)" /OUT:c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\DEBUG\DemoWrapperDriver.dll $(DLINK_FLAGS) $(DLINK2_FLAGS) $(DLINK_SPATH) @$(STATIC_LIBRARY_FILES_LIST)
	"$(DLINK)" /OUT:c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\DEBUG\DemoWrapperDriver.dll $(DLINK_FLAGS) $(DLINK_SPATH) @$(STATIC_LIBRARY_FILES_LIST)

$(OUTPUT_DIR)\DemoWrapperDriver.efi : $(DEBUG_DIR)\DemoWrapperDriver.dll
	"$(GENFW)" -e $(MODULE_TYPE) -o c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\OUTPUT\DemoWrapperDriver.efi c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\DEBUG\DemoWrapperDriver.dll $(GENFW_FLAGS)
	$(CP) c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\OUTPUT\DemoWrapperDriver.efi $(DEBUG_DIR)
	$(CP) c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\OUTPUT\DemoWrapperDriver.efi $(BIN_DIR)\$(MODULE_NAME_GUID).efi
	-$(CP) $(DEBUG_DIR)\*.map $(OUTPUT_DIR)
	-$(CP) $(DEBUG_DIR)\*.pdb $(OUTPUT_DIR)

$(OUTPUT_DIR)\PayloadDxe.efi : $(DEBUG_DIR)\AutoGen.h
$(OUTPUT_DIR)\PayloadDxe.efi : $(WORKSPACE)\MsSurfaceIntelPkg\DemoWrapperDriver\X64\Bin\PayloadDxe.preefi
	-$(CP) c:\_uefi\devicesintel\MsSurfaceIntelPkg\DemoWrapperDriver\X64\Bin\PayloadDxe.preefi c:\_uefi\devicesintel\Build\MsftAvilaPkg\DEBUG_VS2017\X64\MsSurfaceIntelPkg\DemoWrapperDriver\DemoWrapperDriver\OUTPUT\PayloadDxe.efi

$(FFS_OUTPUT_DIR)\$(MODULE_GUID).map : $(OUTPUT_DIR)\PayloadDxe.map
	if exist $(OUTPUT_DIR)\PayloadDxe.map $(CP) $(OUTPUT_DIR)\PayloadDxe.map $(FFS_OUTPUT_DIR)\$(MODULE_GUID).map
$(OUTPUT_DIR)\PayloadDxe.map :
$(FFS_OUTPUT_DIR)\$(MODULE_GUID).map : $(OUTPUT_DIR)\DemoWrapperDriver.map
	if exist $(OUTPUT_DIR)\DemoWrapperDriver.map $(CP) $(OUTPUT_DIR)\DemoWrapperDriver.map $(FFS_OUTPUT_DIR)\$(MODULE_GUID).map
$(OUTPUT_DIR)\DemoWrapperDriver.map :
$(FFS_OUTPUT_DIR)\$(MODULE_GUID).ffs : $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC1.1.raw $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC2.1.dpx $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC3.1.pe32 $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC4.ui $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC5.ver
	GenFfs -t EFI_FV_FILETYPE_DRIVER -g $(MODULE_GUID) -o $(FFS_OUTPUT_DIR)\$(MODULE_GUID).ffs -oi $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC1.1.raw -oi $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC2.1.dpx -oi $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC3.1.pe32 -n 0 -oi $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC4.ui -oi $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC5.ver
$(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC1.1.raw : $(OUTPUT_DIR)\PayloadDxe.efi
	if exist $(OUTPUT_DIR)\PayloadDxe.efi GenSec -s EFI_SECTION_RAW -o $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC1.1.raw $(OUTPUT_DIR)\PayloadDxe.efi
$(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC2.1.dpx : $(OUTPUT_DIR)\DemoWrapperDriver.depex
	if exist $(OUTPUT_DIR)\DemoWrapperDriver.depex GenSec -s EFI_SECTION_DXE_DEPEX -o $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC2.1.dpx $(OUTPUT_DIR)\DemoWrapperDriver.depex
$(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC3.1.pe32 : $(OUTPUT_DIR)\DemoWrapperDriver.efi
	if exist $(OUTPUT_DIR)\DemoWrapperDriver.efi GenSec -s EFI_SECTION_PE32 -o $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC3.1.pe32 $(OUTPUT_DIR)\DemoWrapperDriver.efi
$(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC4.ui : $(MODULE_DIR)\$(MODULE_FILE)
	GenSec -s EFI_SECTION_USER_INTERFACE -n $(MODULE_NAME) -o $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC4.ui
$(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC5.ver : $(MODULE_DIR)\$(MODULE_FILE)
	GenSec -s EFI_SECTION_VERSION -n 1.0 -o $(FFS_OUTPUT_DIR)\$(MODULE_GUID)SEC5.ver


#
# clean all intermediate files
#
clean:
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
		$(RM) AutoGenTimeStamp

#
# clean all generated files
#
cleanall:
	if exist $(DEBUG_DIR) $(RD) $(DEBUG_DIR)
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)\$(MODULE_NAME).efi
	$(RM) AutoGenTimeStamp

#
# clean all dependent libraries built
#
cleanlib:
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseDebugPrintErrorLevelLib\BaseDebugPrintErrorLevelLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseDebugPrintErrorLevelLib\BaseDebugPrintErrorLevelLib\Makefile cleanall
	-@if exist $(BIN_DIR)\AdvLoggerPkg\Library\AdvancedLoggerLib\Dxe\AdvancedLoggerLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\AdvLoggerPkg\Library\AdvancedLoggerLib\Dxe\AdvancedLoggerLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BasePrintLib\BasePrintLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BasePrintLib\BasePrintLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\DxePcdLib\DxePcdLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\DxePcdLib\DxePcdLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseLib\BaseLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseLib\BaseLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseMemoryLibOptDxe\BaseMemoryLibOptDxe\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseMemoryLibOptDxe\BaseMemoryLibOptDxe\Makefile cleanall
	-@if exist $(BIN_DIR)\AdvLoggerPkg\Library\BaseDebugLibAdvancedLogger\BaseDebugLibAdvancedLogger\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\AdvLoggerPkg\Library\BaseDebugLibAdvancedLogger\BaseDebugLibAdvancedLogger\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\UefiBootServicesTableLib\UefiBootServicesTableLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiBootServicesTableLib\UefiBootServicesTableLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\UefiMemoryAllocationLib\UefiMemoryAllocationLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiMemoryAllocationLib\UefiMemoryAllocationLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\UefiRuntimeServicesTableLib\UefiRuntimeServicesTableLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiRuntimeServicesTableLib\UefiRuntimeServicesTableLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\UefiDevicePathLib\UefiDevicePathLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiDevicePathLib\UefiDevicePathLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\UefiLib\UefiLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiLib\UefiLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\DxeHobLib\DxeHobLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\DxeHobLib\DxeHobLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseRngLib\BaseRngLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseRngLib\BaseRngLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\DxeServicesLib\DxeServicesLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\DxeServicesLib\DxeServicesLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\UefiDriverEntryPoint\UefiDriverEntryPoint\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\UefiDriverEntryPoint\UefiDriverEntryPoint\Makefile cleanall
	-@if exist $(BIN_DIR)\MsSurfaceCorePkg\Library\MsManufacturingModeDxeLib\MsManufacturingModeDxeLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MsSurfaceCorePkg\Library\MsManufacturingModeDxeLib\MsManufacturingModeDxeLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdeModulePkg\Library\MuVariablePolicyHelperLib\MuVariablePolicyHelperLib\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdeModulePkg\Library\MuVariablePolicyHelperLib\MuVariablePolicyHelperLib\Makefile cleanall
	-@if exist $(BIN_DIR)\MdePkg\Library\BaseBinSecurityLibRng\BaseBinSecurityLibRng\Makefile "$(MAKE)" $(MAKE_FLAGS) -f $(BIN_DIR)\MdePkg\Library\BaseBinSecurityLibRng\BaseBinSecurityLibRng\Makefile cleanall
	@cd $(MODULE_BUILD_DIR)

