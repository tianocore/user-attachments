diff --git a/edk2/SecurityPkg/Library/DxeTpm2MeasureBootLib/DxeTpm2MeasureBootLib.c b/edk2/SecurityPkg/Library/DxeTpm2MeasureBootLib/DxeTpm2MeasureBootLib.c
--- a/edk2/SecurityPkg/Library/DxeTpm2MeasureBootLib/DxeTpm2MeasureBootLib.c
+++ b/edk2/SecurityPkg/Library/DxeTpm2MeasureBootLib/DxeTpm2MeasureBootLib.c
@@ -137,6 +137,7 @@ Tcg2MeasureGptTable (
   EFI_DISK_IO_PROTOCOL         *DiskIo;
   EFI_PARTITION_TABLE_HEADER   *PrimaryHeader;
   EFI_PARTITION_ENTRY          *PartitionEntry;
+  UINTN                        AllocSize;
   UINT8                        *EntryPtr;
   UINTN                        NumberOfPartition;
   UINT32                       Index;
@@ -211,9 +212,19 @@ Tcg2MeasureGptTable (
   }

   //
+  // Check that NumberOfPartitionEntries * SizeOfPArtitionEntry doesn't overflow
+  // in 64 a bit variable.
+  //
+  AllocSize = PrimaryHeader->NumberOfPartitionEntries * PrimaryHeader->SizeOfPartitionEntry;
+  if (AllocSize / PrimaryHeader->SizeOfPartitionEntry != PrimaryHeader->NumberOfPartitionEntries) {
+    FreePool (PrimaryHeader);
+    return EFI_OUT_OF_RESOURCES;
+  }
+
+  //
   // Read the partition entry.
   //
-  EntryPtr = (UINT8 *)AllocatePool (PrimaryHeader->NumberOfPartitionEntries * PrimaryHeader->SizeOfPartitionEntry);
+  EntryPtr = (UINT8 *)AllocatePool (AllocSize);
   if (EntryPtr == NULL) {
     FreePool (PrimaryHeader);
     return EFI_OUT_OF_RESOURCES;
@@ -223,7 +234,7 @@ Tcg2MeasureGptTable (
                      DiskIo,
                      BlockIo->Media->MediaId,
                      MultU64x32 (PrimaryHeader->PartitionEntryLBA, BlockIo->Media->BlockSize),
-                     PrimaryHeader->NumberOfPartitionEntries * PrimaryHeader->SizeOfPartitionEntry,
+                     AllocSize,
                      EntryPtr
                      );
   if (EFI_ERROR (Status)) {
@@ -246,10 +257,20 @@ Tcg2MeasureGptTable (
   }

   //
-  // Prepare Data for Measurement (CcProtocol and Tcg2Protocol)
+  // Check for integer overflow
   //
   EventSize = (UINT32)(sizeof (EFI_GPT_DATA) - sizeof (GptData->Partitions)
                        + NumberOfPartition * PrimaryHeader->SizeOfPartitionEntry);
+  if (EventSize + sizeof(EFI_TCG2_EVENT) - sizeof(Tcg2Event->Event) <=
+      NumberOfPartition * PrimaryHeader->SizeOfPartitionEntry)
+  {
+    Status = EFI_OUT_OF_RESOURCES;
+    goto Exit;
+  }
+
+  //
+  // Prepare Data for Measurement (CcProtocol and Tcg2Protocol)
+  //
   EventPtr = (UINT8 *)AllocateZeroPool (EventSize + sizeof (EFI_TCG2_EVENT) - sizeof (Tcg2Event->Event));
   if (EventPtr == NULL) {
     Status = EFI_OUT_OF_RESOURCES;