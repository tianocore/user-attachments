diff --git a/SecurityPkg/Library/AuthVariableLib/AuthService.c b/SecurityPkg/Library/AuthVariableLib/AuthService.c
index 2f60331f2c..e920255d0e 100644
--- a/SecurityPkg/Library/AuthVariableLib/AuthService.c
+++ b/SecurityPkg/Library/AuthVariableLib/AuthService.c
@@ -623,7 +623,29 @@ ProcessVarWithPk (
                AuthVarTypePk,
                &Del
                );
-  } else {
+  }
+  //  we should only take this path if gEfiMdeModulePkgTokenSpaceGuid.PcdEnforceSelfsignedPk is not enabled
+  else if (!FeaturePcdGet (PcdEnforceSelfsignedPk) && mPlatformMode == SETUP_MODE && IsPk)
+  {
+    // If we are in Setup mode and we are trying to set the PK we should allow an unsigned packet
+    // First we need to see if it is in fact signed, and if so, strip it.
+    // TODO figure out if it has auth data or not
+    Payload = (UINT8 *) Data + AUTHINFO2_SIZE (Data);
+    PayloadSize = DataSize - AUTHINFO2_SIZE (Data);
+    Status = AuthServiceInternalUpdateVariableWithTimeStamp (
+               VariableName,
+               VendorGuid,
+               Payload,
+               PayloadSize,
+               Attributes,
+               &((EFI_VARIABLE_AUTHENTICATION_2 *) Data)->TimeStamp
+               );
+    if (EFI_ERROR(Status))
+    {
+      return Status;
+    }
+  }
+  else {
     //
     // Verify against the certificate in data payload.
     //
diff --git a/SecurityPkg/Library/AuthVariableLib/AuthVariableLib.inf b/SecurityPkg/Library/AuthVariableLib/AuthVariableLib.inf
index 8d4ce14df4..23e6804b3d 100644
--- a/SecurityPkg/Library/AuthVariableLib/AuthVariableLib.inf
+++ b/SecurityPkg/Library/AuthVariableLib/AuthVariableLib.inf
@@ -42,6 +42,9 @@
   BaseCryptLib
   PlatformSecureLib
 
+[FeaturePcd]
+  gEfiMdeModulePkgTokenSpaceGuid.PcdEnforceSelfsignedPk
+
 [Guids]
   ## CONSUMES            ## Variable:L"SetupMode"
   ## PRODUCES            ## Variable:L"SetupMode"
diff --git a/SecurityPkg/SecurityPkg.dec b/SecurityPkg/SecurityPkg.dec
index 5335cc5397..7c004d7c41 100644
--- a/SecurityPkg/SecurityPkg.dec
+++ b/SecurityPkg/SecurityPkg.dec
@@ -500,5 +500,12 @@
   # @Prompt Tpm2AcpiTableLasa LASA field in TPM2 ACPI table.
   gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableLasa|0|UINT64|0x00010023
 
+[PcdsFeatureFlag]
+  ## Indicates if the platform will enforce PK's to be self signed when setting the PK with none currently set
+  #   TRUE  - Require PK to be self signed
+  #   FALSE - Does not require PK to be self signed
+  # @Prompt Enforce PK to be self signed
+  gEfiMdeModulePkgTokenSpaceGuid.PcdEnforceSelfsignedPk|FALSE|BOOLEAN|0x00010024
+
 [UserExtensions.TianoCore."ExtraFiles"]
   SecurityPkgExtra.uni
